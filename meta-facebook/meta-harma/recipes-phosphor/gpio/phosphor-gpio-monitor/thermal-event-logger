#!/bin/bash

# shellcheck source=meta-facebook/meta-harma/recipes-phosphor/gpio/phosphor-gpio-monitor/logging-util
source /usr/libexec/phosphor-gpio-monitor/logging-util

HELP="
Usage: thermal-event-logger <event> <id_gpio-name>
<event> is the thermal event to log,
e.g. DeviceOverOperatingTemperatureFault / DeviceOperatingNormalTemperature.

<id_gpio-name> is defined in json file,
e.g. 2_cpu0-thermtrip-alert.service
"

# get assert or deassert message
if [ "$1" == "DeviceOverOperatingTemperatureFault" ]; then
  action="assert"
elif [ "$1" == "DeviceOperatingNormalTemperature" ]; then
  action="deassert"
fi

MESSAGE=$2
# get gpio chip ID
number="${MESSAGE%%_*}"

# remove prefix from 0_xxxxxx to xxxxxx
GPIO_NAME="${MESSAGE#*_}"
MSG_ID="xyz.openbmc_project.State.Thermal.$1"
DEVICE_PATH="/xyz/openbmc_project/State/Thermal/host0"
STASH_FILE="/run/${GPIO_NAME}.log_entry"

if gpio_logging_valid "$number" "$action" ; then
    case $1 in
        "-h")
            echo "$HELP"
            ;;

        "DeviceOverOperatingTemperatureFault")
            if [ ! -s "$STASH_FILE" ]; then
                 /usr/bin/log-create "$MSG_ID" --json \
                     "{ \"DEVICE\": \"${DEVICE_PATH}\", \"FAILURE_DATA\": \"${GPIO_NAME}\"}" \
                     > "${STASH_FILE}"
            fi
            ;;

        "DeviceOperatingNormalTemperature")
            if [ -e "${STASH_FILE}" ]; then
                log-resolve -p "$(< "${STASH_FILE}")" && rm "${STASH_FILE}"
            fi
            /usr/bin/log-create "$MSG_ID" --json \
                "{ \"DEVICE\": \"${DEVICE_PATH}\", \"FAILURE_DATA\": \"${GPIO_NAME}\"}"
            ;;
    esac
fi

exit 0
